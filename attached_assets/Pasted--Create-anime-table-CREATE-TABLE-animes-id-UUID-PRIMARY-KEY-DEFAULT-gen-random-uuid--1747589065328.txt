
-- Create anime table
CREATE TABLE animes (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  image_url TEXT NOT NULL,
  release_year INTEGER NOT NULL,
  episodes INTEGER NOT NULL,
  genres TEXT[] NOT NULL DEFAULT '{}',
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL
);

-- Create download links table
CREATE TABLE download_links (
  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
  anime_id UUID NOT NULL REFERENCES animes(id) ON DELETE CASCADE,
  quality TEXT NOT NULL,
  url TEXT NOT NULL,
  episode_number INTEGER NOT NULL,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
  updated_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL
);

-- Enable Row Level Security (RLS) on tables
ALTER TABLE animes ENABLE ROW LEVEL SECURITY;
ALTER TABLE download_links ENABLE ROW LEVEL SECURITY;

-- Create policies for public read access
CREATE POLICY "Allow public read access for animes" 
  ON animes FOR SELECT TO anon
  USING (true);

CREATE POLICY "Allow public read access for download links" 
  ON download_links FOR SELECT TO anon
  USING (true);

-- Create policies for authenticated users to perform CRUD operations
CREATE POLICY "Allow authenticated users to create animes" 
  ON animes FOR INSERT TO authenticated 
  WITH CHECK (true);

CREATE POLICY "Allow authenticated users to update animes" 
  ON animes FOR UPDATE TO authenticated 
  USING (true);

CREATE POLICY "Allow authenticated users to delete animes" 
  ON animes FOR DELETE TO authenticated 
  USING (true);

CREATE POLICY "Allow authenticated users to create download links" 
  ON download_links FOR INSERT TO authenticated 
  WITH CHECK (true);

CREATE POLICY "Allow authenticated users to update download links" 
  ON download_links FOR UPDATE TO authenticated 
  USING (true);

CREATE POLICY "Allow authenticated users to delete download links" 
  ON download_links FOR DELETE TO authenticated 
  USING (true);
